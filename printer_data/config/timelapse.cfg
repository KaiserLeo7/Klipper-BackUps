[gcode_shell_command TL_RESET_CACHE]
command: sh /home/mks/gcode_files/Timelapses/scripts/reset_cache.sh
timeout: 30
verbose: False


[gcode_shell_command TL_SNAPSHOT]
command: sh /home/mks/gcode_files/Timelapses/scripts/take_snapshot.sh
timeout: 5
verbose: False


[gcode_shell_command TL_CREATE_TIMELAPSE]
command: sh /home/mks/gcode_files/Timelapses/scripts/create_timelapse.sh
timeout: 3600
verbose: False


[gcode_shell_command TL_SLEEP]
command: sh /home/mks/gcode_files/Timelapses/scripts/sleep.sh
timeout: 20
verbose: False


[gcode_macro TIMELAPSE_START]
description: Start the timelapse
  Usage: TIMELAPSE_START [BED_FRONT=<0/1>] [LIGHT_ENABLED=<0/1>] [FOCUS_TIME=<0-20>] [MOVE_PRINTHEAD_AWAY=<0/1>]
gcode:
  # Read parameters
  {% set bed_front = ((params.BED_FRONT|default(0)|int,0)|max,1)|min %}
  {% set light_enabled = ((params.LIGHT_ENABLED|default(0)|int,0)|max,1)|min %}
  {% set focus_time = ((params.FOCUS_TIME|default(4)|int,0)|max,20)|min %}
  {% set move_printhead_away = ((params.MOVE_PRINTHEAD_AWAY|default(1)|int,0)|max,1)|min %}

  # Reset snapshot cache
  RUN_SHELL_COMMAND CMD=TL_RESET_CACHE
  M400  # Wait for cache to reset
  M118 {'Timelapse snapshot cache reset'}

  # Update variables
  SAVE_VARIABLE VARIABLE=timelapse_bed_front VALUE={bed_front}
  SAVE_VARIABLE VARIABLE=timelapse_light_enabled VALUE={light_enabled}
  SAVE_VARIABLE VARIABLE=timelapse_focus_time VALUE={focus_time}
  SAVE_VARIABLE VARIABLE=timelapse_move_printhead_away VALUE={move_printhead_away}
  SAVE_VARIABLE VARIABLE=timelapse_filename VALUE='"{printer.print_stats.filename.split('.')[0]}"'
  SAVE_VARIABLE VARIABLE=timelapse_frame VALUE=0

  # Turn light on if toggle light is activated
  {% if light_enabled == 1 %}
    SET_PIN PIN=caselight VALUE=1
  {% endif %}


[gcode_macro TIMELAPSE_SNAPSHOT]
description: Take a snapshot for a timelapse (bed position and focus time are defined in TIMELAPSE_START macro)
  Usage: TIMELAPSE_SNAPSHOT
gcode:
  # Load variables
  {% set bed_front = ((printer.save_variables.variables.timelapse_bed_front|default(0)|int,0)|max,1)|min %}
  {% set focus_time = ((printer.save_variables.variables.timelapse_focus_time|default(0)|int,0)|max,20)|min %}
  {% set move_printhead_away = ((printer.save_variables.variables.timelapse_move_printhead_away|default(0)|int,0)|max,1)|min %}
  {% set frame = (printer.save_variables.variables.timelapse_frame|default(0)|int,0)|max %}
  {% set x_snapshot = printer.toolhead.axis_maximum.x-5 %}
  {% set y_snapshot = printer.toolhead.axis_maximum.y-15 if bed_front == 1 else printer.toolhead.axis_maximum.y/2 %}

  # Save print position and retract 5mm while moving 1mm up if enough space above
  SAVE_GCODE_STATE NAME=before_move_up
  G91
  G1 E-5 F1500
  {% if printer.gcode_move.position.z+1 < printer.toolhead.axis_maximum.z %}
    G1 Z1 F600
  {% endif %}
  G90

  # Save position and move away with 300mm/s
  {% if move_printhead_away == 1 %}
    SAVE_GCODE_STATE NAME=before_move_away
    G1 X{x_snapshot} Y{y_snapshot} F18000
  {% endif %}

  # Wait to focus and take snapshot
  M400
  RUN_SHELL_COMMAND CMD=TL_SLEEP PARAMS={focus_time}
  M400
  RUN_SHELL_COMMAND CMD=TL_SNAPSHOT PARAMS={'%04d' % frame}
  M400  # Wait for frame to save
  M118 {'snapshot_' + '%04d' % frame + '.jpg saved'}
  SAVE_VARIABLE VARIABLE=timelapse_frame VALUE={frame + 1}

  # Restore print position
  {% if move_printhead_away == 1 %}
    RESTORE_GCODE_STATE NAME=before_move_away MOVE=1 MOVE_SPEED=300
  {% endif %}
  G91
  G1 E5 F1500
  G90
  RESTORE_GCODE_STATE NAME=before_move_up MOVE=1 MOVE_SPEED=10


[gcode_macro RENDER_TIMELAPSE]
description: Render the timelapse
  Usage: RENDER_TIMELAPSE
gcode:
  # Load variables
  {% set counter = (printer.save_variables.variables.timelapse_counter|default(0)|int,0)|max %}
  {% set filename = printer.save_variables.variables.timelapse_filename|default('') %}
  {% set render_time = ((printer.save_variables.variables.timelapse_frame|default(0)|int,0)|max / 4)|int %}

  # Render the timelapse
  M118 {'Rendering timelapse video... (this can take a while because 3D printers are not optimized for video rendering)'}
  M118 {'Estimated time: ' + render_time|string + ' second(s)'}
  RUN_SHELL_COMMAND CMD=TL_CREATE_TIMELAPSE PARAMS='"{'timelapse_' + counter|string + '_' + filename}"'
  M400  # Wait for timelapse to render
  M118 {'timelapse_' + counter|string + '_' + filename + '.mp4 saved'}

  # Update variables
  SAVE_VARIABLE VARIABLE=timelapse_filename VALUE='""'
  SAVE_VARIABLE VARIABLE=timelapse_frame VALUE=0
  SAVE_VARIABLE VARIABLE=timelapse_counter VALUE={counter + 1}


[gcode_macro TIMELAPSE_FINISH]
description: Finish the timelapse
  Usage: TIMELAPSE_FINISH
gcode:
  # Load variables
  {% set light_enabled = ((printer.save_variables.variables.timelapse_light_enabled|default(1)|int,0)|max,1)|min %}

  # Take last snapshot (because TIMELAPSE_SNAPSHOT macro is only triggered in between layers)
  TIMELAPSE_SNAPSHOT

  # Create the timelapse
  RENDER_TIMELAPSE

  # Turn light off if toggle light is activated
  {% if light_enabled == 1 %}
    SET_PIN PIN=caselight VALUE=0
  {% endif %}
